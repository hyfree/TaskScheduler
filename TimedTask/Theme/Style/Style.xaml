<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--ComboBox默认样式-->
    <Style TargetType="ComboBox">
        <Setter Property="Height" Value="24"/>
    </Style>
    <!--Menu分割线-->
    <Style TargetType="Separator" x:Key="SeparatorStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Rectangle Fill="#FFC6D9E2" Height="1" Margin="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--主页内容边框-->
    <Style TargetType="{x:Type Border}" x:Key="MainBoderStyle">
        <Setter Property="CornerRadius" Value="2"/>
        <Setter Property="BorderBrush" Value="{x:Null}"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Background">
            <Setter.Value>
                <VisualBrush TileMode="Tile" >
                    <VisualBrush.Visual>
                        <Image Source="/Theme/Images/WindowBackground.jpg"></Image>
                    </VisualBrush.Visual>
                </VisualBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <!--全局Lable-->
    <Style TargetType="{x:Type Label}">
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="HorizontalAlignment"  Value="Center" />
        <Setter Property="VerticalAlignment"  Value="Center" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#FF3F3F3F"/>
    </Style>
    <!--MenuItem默认样式-->
    <Style TargetType="{x:Type MenuItem}">
        <Setter Property="Foreground" Value="#FF232323"></Setter>
        <Setter Property="Background" Value="{x:Null}"></Setter>
    </Style>
    <!--POP窗口文本样式-->
    <Style x:Key="WarnTextBlockStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="4,10,1,1"></Setter>
        <Setter Property="FontSize" Value="15"></Setter>
        <Setter Property="Foreground" Value="#FF0C3734"></Setter>
        <Setter Property="TextWrapping"  Value="Wrap"></Setter>
    </Style>
    <Style x:Key="WarnRunStyle" TargetType="{x:Type Run}">
        <Setter Property="FontSize" Value="12"></Setter>
        <Setter Property="Foreground" Value="#FF00601C"></Setter>
    </Style>
    <!--滚动条-->
    <Style TargetType="ScrollBar">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid Width="{TemplateBinding Width}" x:Name="Bg" SnapsToDevicePixels="true">
                        <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                            <Track.Thumb>
                                <Thumb>
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Rectangle Fill="Silver" Opacity="0.6"></Rectangle>
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ScrollViewer-->
    <Style TargetType="ScrollViewer" >
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="#FFF8F8F8" Opacity="0.8"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                        <ScrollBar Visibility="{TemplateBinding VerticalScrollBarVisibility}" Margin="0,5,0,5" Width="5" HorizontalAlignment="Right" Opacity="0" x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar" To="1" Duration="0:0:0.5"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" Storyboard.TargetName="PART_VerticalScrollBar" Duration="0"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="VerticalScrollBarVisibility" Value="Hidden">
                            <Setter Property="Visibility" Value="Collapsed" TargetName="PART_VerticalScrollBar"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--单选按钮-->
    <Style TargetType="RadioButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Image Name="imgCheck" Width="16" Source="/Theme/Images/RadioButton/Normal.png"/>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Source" TargetName="imgCheck" Value="/Theme/Images/RadioButton/Checked.png"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--设置页面-->
    <Style TargetType="RadioButton" x:Key="ConfigRadioButtonStyle">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border x:Name="Bd" Width="120" Height="30" BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#44838383"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="Bd" Value="#006699"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--TextBox全局样式-->
    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontFamily" Value="微软雅黑" />
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>
    <!--默认 CheckBox-->
    <Style TargetType="{x:Type CheckBox}">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Padding" Value="5,0,0,0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid VerticalAlignment="Center" Height="14" Background="Transparent">
                            <Rectangle Name="Border" Width="14" Height="14" StrokeThickness="1" Stroke="#FF19A4E5"></Rectangle>
                            <Path Visibility="Collapsed" Name="Checked" Data="M2,7 L6,12 L14,2" VerticalAlignment="Center" HorizontalAlignment="Left" Stretch="Fill" Stroke="#FF526870" StrokeThickness="2"/>
                        </Grid>
                        <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Checked" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Stroke" TargetName="Checked" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            <Setter Property="Opacity" TargetName="Border" Value="0.7"/>
                            <Setter Property="Opacity" TargetName="Checked" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>